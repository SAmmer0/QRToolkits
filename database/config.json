{
    // database configuration
    // the folder saves all metadata of the database
    "database_metadata_path": "~/Documents/DatabaseMetadata",
    // the database engine name cannot be changed
    "hdf5db": {
        // Warning: HDF5 database is designed to store numerical data, any setting related
        // to string like data may lead to unpredictable outcome.
        // supported data type, "i" for int and "f" for float
        "valid_type_header": ["i", "f"],
        // column size in an initial data file
        "initial_col_size": 4000,
        // if the data column size exceeds the file column size, the data file should be resized
        // (to make database more efficient), which is done by increase the data column size by
        // "col_size_increase_step", this operation will delete origin data file and generate a
        // new data file(the program should be authorized properly)
        "col_size_increase_step": 1000,
        // default data type
        "default_data_type": "float64",
        "log": {
            // whether the database use an independent log file
            "enable_log": true,
            // log is save to file, otherwise log will be printed
            "log_to_file": true,
            // log path where the log file is saved, starting with "./" means relative path
            // Warning: in configuration file separator is "/"
            "log_path": "./hdfdb_log.log",
            // log level
            "log_level": "DEBUG",
            // log format
            "format": "%(asctime)s %(levelname)s %(filename)s-%(lineno)s: %(message)s",
            // date format
            "date_format": "%Y-%m-%d %H:%M:%S"
        },
        // string dtype of date, which would be used in numpy.array to convert date strings
        "date_dtype": "S20",
        // string dtype of symbol, which would be used in numpy.array to convert symbol strings
        "symbol_dtype": "S20",
        // format of time data in database
        "db_time_format": "%Y%m%d"
    },
    "jsondb":{
        // format of time data in database
        "db_time_format": "%Y%m%d",
        // to make read and write more efficient, the data are stored in different files dependent
        // on its time, the supported split frequencies are ["YEAR", "MONTH", "QUARTER"], for example,
        // if it's set "YEAR", the file named "2017.json" will contain data from 2017-01-01 to 2017-12-31
        "data_spilt_frequency": "QUARTER",
        "log":{
            // whether the database use an independent log file
            "enable_log": true,
            // log is save to file, otherwise log will be printed
            "log_to_file": true,
            // log path where the log file is saved, starting with "./" means relative path
            // Warning: in configuration file separator is "/"
            "log_path": "./jsondb_log.log",
            // log level
            "log_level": "DEBUG",
            // log format
            "format": "%(asctime)s %(levelname)s %(filename)s-%(lineno)s: %(message)s",
            // date format
            "date_format": "%Y-%m-%d %H:%M:%S"
        }
    },
    "pickledb":{
        "log":{
            // whether the database use an independent log file
            "enable_log": true,
            // log is save to file, otherwise log will be printed
            "log_to_file": true,
            // log path where the log file is saved, starting with "./" means relative path
            // Warning: in configuration file separator is "/"
            "log_path": "./jsondb_log.log",
            // log level
            "log_level": "DEBUG",
            // log format
            "format": "%(asctime)s %(levelname)s %(filename)s-%(lineno)s: %(message)s",
            // date format
            "date_format": "%Y-%m-%d %H:%M:%S"
        }
    },
    "log": {
        // whether enable the database module log, this setting does not work, it's just used to 
        // be consistent with data engine log setting
        "enable_log": true,
        // log is save to file, otherwise log will be printed
        "log_to_file": true,
        // log path where the log file is saved, starting with "./" means relative path
        "log_path": "./database_log.log",
        // log level
        "log_level": "DEBUG",
        // log format
        "format": "%(asctime)s: %(message)s",
        // date format
        "date_format": "%Y-%m-%d %H:%M:%S"
    }
}